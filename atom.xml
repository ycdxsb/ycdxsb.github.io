<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>食兔人的博客</title>
  <icon>https://blog.ycdxsb.cn/icon.png</icon>
  
  <link href="https://blog.ycdxsb.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.ycdxsb.cn/"/>
  <updated>2020-08-15T12:15:07.039Z</updated>
  <id>https://blog.ycdxsb.cn/</id>
  
  <author>
    <name>食兔人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Order Matters: Semantic-Aware Neural Networks for Binary Code Similarity Detection(AAAI 2020)</title>
    <link href="https://blog.ycdxsb.cn/99505d2e.html"/>
    <id>https://blog.ycdxsb.cn/99505d2e.html</id>
    <published>2020-08-15T20:06:00.000Z</published>
    <updated>2020-08-15T12:15:07.039Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;​ 二进制代码相似性检测：在没有源代码的情况下检测相似的二进制函数。传统的方法一般使用图匹配算法进行检测，但传统方法准确率低且复杂度高。深度学习的发展为这一领域提供的新的方法，根据控制流图生成CFG，并使用GNN计算图嵌入，既高效又准确。本文提出Semantic-Aware Neural Networks ，取得了不错的成果&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>2020.08.12 迪士尼的天很蓝，城堡很美</title>
    <link href="https://blog.ycdxsb.cn/62acab4f.html"/>
    <id>https://blog.ycdxsb.cn/62acab4f.html</id>
    <published>2020-08-12T00:00:00.000Z</published>
    <updated>2020-08-14T12:27:46.254Z</updated>
    
    
    <summary type="html">请输入密码查看.若无反应.请使用firefox浏览器</summary>
    
    
    
    <category term="life" scheme="https://blog.ycdxsb.cn/categories/life/"/>
    
    
    <category term="life" scheme="https://blog.ycdxsb.cn/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Knapsack Problem</title>
    <link href="https://blog.ycdxsb.cn/c65d2bd5.html"/>
    <id>https://blog.ycdxsb.cn/c65d2bd5.html</id>
    <published>2020-08-06T16:39:00.000Z</published>
    <updated>2020-08-06T08:41:36.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;最近经常碰到背包问题，所以稍微整理一下&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#问题描述&quot;&gt;¶&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;一般我们碰到的都是0 1背包问题，如下，我们已有数字$a_1,a_2…a_n$，从中给它们分别赋予0或者1的权重$w_i$，使得最终的和为$W$，即&lt;/p&gt;&lt;p&gt;$$\sum_1^n w_ia_i = W$$&lt;/p&gt;&lt;p&gt;而在这类问题中，当$n$较大时就是一个$2^n$复杂度的NP问题&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>记录CTF中的RSA非常规题解</title>
    <link href="https://blog.ycdxsb.cn/1cfe8689.html"/>
    <id>https://blog.ycdxsb.cn/1cfe8689.html</id>
    <published>2020-08-05T14:33:00.000Z</published>
    <updated>2020-08-05T06:38:42.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;如果你熟悉去年所有CTF比赛中的web题解，那么比赛中一半以上的题都能轻松解决 —— posix小姐姐&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF中的RSA基本套路(4)</title>
    <link href="https://blog.ycdxsb.cn/2decc525.html"/>
    <id>https://blog.ycdxsb.cn/2decc525.html</id>
    <published>2020-08-03T10:33:00.000Z</published>
    <updated>2020-08-03T06:02:50.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;第四部分是相关消息的内容&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;依赖库：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;gmpy2&lt;/li&gt;&lt;li&gt;pycrypto&lt;/li&gt;&lt;li&gt;pwntools&lt;/li&gt;&lt;li&gt;sage&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF中的RSA基本套路(3)</title>
    <link href="https://blog.ycdxsb.cn/62ad53e2.html"/>
    <id>https://blog.ycdxsb.cn/62ad53e2.html</id>
    <published>2020-07-30T17:08:00.000Z</published>
    <updated>2020-08-03T05:57:58.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;第三部分是基本的Coppersmith相关内容&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;依赖库：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;gmpy2&lt;/li&gt;&lt;li&gt;pycrypto&lt;/li&gt;&lt;li&gt;pwntools&lt;/li&gt;&lt;li&gt;sage&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF中的RSA基本套路(2)</title>
    <link href="https://blog.ycdxsb.cn/7bb662a3.html"/>
    <id>https://blog.ycdxsb.cn/7bb662a3.html</id>
    <published>2020-07-11T17:08:00.000Z</published>
    <updated>2020-07-11T21:28:42.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;第二部分主要是一些Oracle相关的内容&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;依赖库：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;gmpy2&lt;/li&gt;&lt;li&gt;pycrypto&lt;/li&gt;&lt;li&gt;pwntools&lt;/li&gt;&lt;li&gt;sage&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>跟着AngrCTF学Angr(3)</title>
    <link href="https://blog.ycdxsb.cn/f7e7b79c.html"/>
    <id>https://blog.ycdxsb.cn/f7e7b79c.html</id>
    <published>2020-07-05T16:46:00.000Z</published>
    <updated>2020-07-11T20:51:02.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;第三部分是一些漏洞自动化利用相关的内容&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:&lt;br&gt;&lt;code&gt;angr == 8.20.1.7&lt;/code&gt;&lt;br&gt;二进制文件和脚本存储于&lt;code&gt;https://github.com/ycdxsb/Challenges/tree/master/angr_ctf&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/categories/CTF/re/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>CTF中的RSA基本套路(1)</title>
    <link href="https://blog.ycdxsb.cn/509b3160.html"/>
    <id>https://blog.ycdxsb.cn/509b3160.html</id>
    <published>2020-07-04T21:08:00.000Z</published>
    <updated>2020-07-11T20:51:02.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;碰到东西老是忘老是忘，要用的时候总是得自己去搜索模板浪费时间，所以只能整理整理一下套路和解题模板才能活下去这样子&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;依赖库：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;gmpy2&lt;/li&gt;&lt;li&gt;pycrypto&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/categories/CTF/crypto/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="crypto" scheme="https://blog.ycdxsb.cn/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>obfuscation &amp;&amp; deobfuscation(1)</title>
    <link href="https://blog.ycdxsb.cn/cc7a6108.html"/>
    <id>https://blog.ycdxsb.cn/cc7a6108.html</id>
    <published>2020-06-14T21:15:00.000Z</published>
    <updated>2020-07-11T21:34:12.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://xn--deflat-917ig9cu2n9jev84j.py&quot;&gt;之前只会用deflat.py&lt;/a&gt;，最近正好学了angr，而且看了下代码也只有三百行不到，所以打算对应着康康原理和代码&lt;/p&gt;&lt;p&gt;第一部分简单讲一下工具使用和obfuscation原理&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/categories/CTF/re/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>面向任务的对话系统</title>
    <link href="https://blog.ycdxsb.cn/599bbf87.html"/>
    <id>https://blog.ycdxsb.cn/599bbf87.html</id>
    <published>2020-06-11T14:05:00.000Z</published>
    <updated>2020-07-11T21:27:46.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;​ 在对话系统领域中，面向任务的对话系统是其中很重要的一个分支，不同于开放域的对话系统，任务型对话系统侧重于完成一个领域或者几个领域内的特定任务，例如天气查询、餐厅预订等。面向任务的对话系统能够分为pipeline方法和end-to-end方法两类，并依赖相关领域内的知识库。本文首先介绍pipeline和end-to-end两类方法，然后简单介绍在面向任务的对话系统研究中使用的数据集，最后结合近三年中面向任务的对话系统领域内的研究成果，梳理当前存在的主要挑战。&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="AI" scheme="https://blog.ycdxsb.cn/categories/AI/"/>
    
    <category term="NLP" scheme="https://blog.ycdxsb.cn/categories/AI/NLP/"/>
    
    
    <category term="AI" scheme="https://blog.ycdxsb.cn/tags/AI/"/>
    
    <category term="NLP" scheme="https://blog.ycdxsb.cn/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>跟着AngrCTF学Angr(2)</title>
    <link href="https://blog.ycdxsb.cn/eefc86dd.html"/>
    <id>https://blog.ycdxsb.cn/eefc86dd.html</id>
    <published>2020-06-10T17:03:00.000Z</published>
    <updated>2020-07-11T20:51:02.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;第二部分主要是hook相关的内容的学习&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;code&gt;angr == 8.20.1.7&lt;/code&gt;&lt;/p&gt;&lt;p&gt;二进制文件和脚本存储于&lt;code&gt;https://github.com/ycdxsb/Challenges/tree/master/angr_ctf&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/categories/CTF/re/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>跟着AngrCTF学Angr(1)</title>
    <link href="https://blog.ycdxsb.cn/c5d1d51e.html"/>
    <id>https://blog.ycdxsb.cn/c5d1d51e.html</id>
    <published>2020-06-06T23:22:00.000Z</published>
    <updated>2020-07-11T20:51:02.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;最近想跟着angr_ctf学习了一下符号执行（用来在做逆向的时候偷懒），还是挺有收获的&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;code&gt;angr == 8.20.1.7&lt;/code&gt;&lt;/p&gt;&lt;p&gt;二进制文件和脚本存储于&lt;code&gt;https://github.com/ycdxsb/Challenges/tree/master/angr_ctf&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/categories/CTF/re/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>pin/perf在CTF逆向中的应用</title>
    <link href="https://blog.ycdxsb.cn/c61763eb.html"/>
    <id>https://blog.ycdxsb.cn/c61763eb.html</id>
    <published>2020-06-04T20:22:00.000Z</published>
    <updated>2020-07-11T20:51:02.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;在”深度优先“的学习过程中发现了pin这个工具，之前对于平坦化的程序只会用deflat脚本去平坦化，去不了就只能苦逼的硬调了，直到发现了pin这个工具，打开了侧信道的大门，然后也在搜学习资料的时候搜到了比较轻量的perf工具&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/categories/CTF/re/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="re" scheme="https://blog.ycdxsb.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>Data-Oriented Programming: On the Expressiveness of Non-Control Data Attacks(S&amp;P 2016)</title>
    <link href="https://blog.ycdxsb.cn/c30e365e.html"/>
    <id>https://blog.ycdxsb.cn/c30e365e.html</id>
    <published>2020-05-26T16:23:00.000Z</published>
    <updated>2020-07-11T21:44:12.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;根据控制流的攻击我们知道有ROP和JOP，分别利用包含ret和jmp的Gadgets进行攻击，劫持控制流。&lt;/p&gt;&lt;p&gt;非控制数据攻击通过攻击程序内存，达到信息泄露或者权限提升等目的。文中提出了DOP攻击，利用程序中的Gadgets，构造任意x86程序的非控制数据攻击，并且这种攻击是图灵完备的。&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="others" scheme="https://blog.ycdxsb.cn/categories/papers/security/others/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="others" scheme="https://blog.ycdxsb.cn/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>BadBluetooth: Breaking Android Security Mechanisms via Malicious Bluetooth Peripherals(NDSS 2019)</title>
    <link href="https://blog.ycdxsb.cn/93934686.html"/>
    <id>https://blog.ycdxsb.cn/93934686.html</id>
    <published>2020-05-19T15:55:00.000Z</published>
    <updated>2020-07-11T21:42:40.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;本文针对Android 4.2后google开发的蓝牙栈 BlueDroid中存在的粗粒度权限管理问题，提出了并实现了在多版本中的攻击&lt;strong&gt;BadBluetooth&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;通过将蓝牙设备伪装为键盘，网络接入点和耳机，同时配合Android 恶意app发起静默配对，最终实现控制手机截屏偷取用户隐私数据，劫持通信流量，甚至在锁屏状态下拨打电话等攻击。&lt;/p&gt;&lt;p&gt;最后，作者在AOSP项目上实现了对应的防御框架&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="mobile_security" scheme="https://blog.ycdxsb.cn/categories/papers/security/mobile-security/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="mobile security" scheme="https://blog.ycdxsb.cn/tags/mobile-security/"/>
    
  </entry>
  
  <entry>
    <title>LEOPARD: Identifying Vulnerable Code for Vulnerability Assessment through Program Metrics(ICSE 2019)</title>
    <link href="https://blog.ycdxsb.cn/eda43453.html"/>
    <id>https://blog.ycdxsb.cn/eda43453.html</id>
    <published>2020-05-18T21:25:00.000Z</published>
    <updated>2020-07-11T21:38:42.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;识别代码中的脆弱点漏洞评估的重要步骤，当前主要的两种方法为：基于度量和基于模式。前者基于机器学习，后者依赖先验知识。本文提出并实现了一个通用、轻量且具有可扩展性的基于程序指标识别漏洞函数的框架 &lt;strong&gt;LEOPARD&lt;/strong&gt;，这个框架不需要任何漏洞的先验知识就能识别脆弱点。第一步，通过复杂的程序指标将目标应用的函数分类；第二步，对每个分类中的函数进行排序，并将排位靠前的函数作为漏洞函数。在实际应用中，LEOPARD将20%的函数中识别出了74%的漏洞函数，从PHP，r2等应用中找到了22个新bug，其中8个是新漏洞。&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>FUZZIFICATION: Anti-Fuzzing Techniques(USENIX 2019)</title>
    <link href="https://blog.ycdxsb.cn/14b4d99.html"/>
    <id>https://blog.ycdxsb.cn/14b4d99.html</id>
    <published>2020-05-17T23:27:00.000Z</published>
    <updated>2020-07-11T21:40:40.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;fuzz作为一种自动化技术，在安全人员手中能够用来发现漏洞，但同时也让hacker能够通过fuzz寻找0day进行攻击。&lt;/p&gt;&lt;p&gt;为了解决这个问题，本文提出了FUZZIFICATION技术。在实际应用中，对外发布使用FUZZIFICATION处理过的二进制文件，提高hacker fuzz的难度和成本，而对内，由于安全人员拥有未处理过的二进制，使得安全人员能够在hacker fuzz出漏洞前更早的发现漏洞并进行修补。&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="fuzz" scheme="https://blog.ycdxsb.cn/categories/papers/security/fuzz/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="fuzz" scheme="https://blog.ycdxsb.cn/tags/fuzz/"/>
    
  </entry>
  
  <entry>
    <title>B2SFinder——Detecting Open-Source Software Reuse in COTS Software(ASE 2019)</title>
    <link href="https://blog.ycdxsb.cn/157adce2.html"/>
    <id>https://blog.ycdxsb.cn/157adce2.html</id>
    <published>2020-05-11T16:00:00.000Z</published>
    <updated>2020-07-11T21:37:34.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;B2SFinder-Detecting-Open-Source-Software-Reuse-in-COTS-Software&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#B2SFinder-Detecting-Open-Source-Software-Reuse-in-COTS-Software&quot;&gt;¶&lt;/a&gt;B2SFinder: Detecting Open-Source Software Reuse in COTS Software&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;B2SFinder 主要是为了解决闭源二进制软件中对复用开源组件检测的问题，由于复用了开源组件，当开源组件发现存在漏洞时，复用它的二进制软件也会存在漏洞，即OSS复用漏洞。&lt;/p&gt;&lt;p&gt;PS：我挂了个n作&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;Abstract&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Abstract&quot;&gt;¶&lt;/a&gt;Abstract&lt;/h2&gt;&lt;p&gt;虽然此前也有一些工作致力于研究二进制和源代码的匹配方法，并能进行大规模的分析，但他们只支持一些简单的特征。在他们的研究中只能近似的衡量OSS复用，忽略了项目中的代码结构。&lt;/p&gt;&lt;p&gt;为了解决这个问题，B2SFinder通过对二进制文件和源代码中的7种特征进行提取，并对7种特征使用三种匹配方法和两种重要性加权方法，计算匹配分数。通过这种方法，我们对1000个流行的二进制软件中的21991个二进制文件和2189个开源库的复用进行了评估。平均每个二进制文件耗时53.85秒。我们也讨论了如何使用B2SFinder检测OSS复用漏洞。&lt;/p&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>源码二进制比对工具Pigaios</title>
    <link href="https://blog.ycdxsb.cn/dc413e13.html"/>
    <id>https://blog.ycdxsb.cn/dc413e13.html</id>
    <published>2020-05-01T15:19:00.000Z</published>
    <updated>2020-07-11T21:49:46.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Pigaios原理简介&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Pigaios原理简介&quot;&gt;¶&lt;/a&gt;Pigaios原理简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt; 为了解决符号表问题&lt;/p&gt;&lt;p&gt;&lt;strong&gt;两种方案：&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;编译源码，使用 Diaphora (or BinDiff) 导出符号表，导入符号表缺失样本&lt;/li&gt;&lt;li&gt;从源码题符号表，导入符号表缺失样本&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;第二种方法好处在于不需要完全编译，因为对于旧的源码，有的很难编译成功&lt;/p&gt;</summary>
    
    
    
    <category term="tools" scheme="https://blog.ycdxsb.cn/categories/tools/"/>
    
    
    <category term="tools" scheme="https://blog.ycdxsb.cn/tags/tools/"/>
    
  </entry>
  
</feed>
