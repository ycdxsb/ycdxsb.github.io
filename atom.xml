<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>食兔人的博客</title>
  <icon>https://blog.ycdxsb.cn/icon.png</icon>
  
  <link href="https://blog.ycdxsb.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.ycdxsb.cn/"/>
  <updated>2021-03-31T06:47:45.551Z</updated>
  <id>https://blog.ycdxsb.cn/</id>
  
  <author>
    <name>食兔人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HEVD ArbitraryOverwrite BitMap [win7sp1]</title>
    <link href="https://blog.ycdxsb.cn/f75b0e15.html"/>
    <id>https://blog.ycdxsb.cn/f75b0e15.html</id>
    <published>2021-03-31T14:14:00.000Z</published>
    <updated>2021-03-31T06:47:45.551Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;前面，我们通过复写内核中的HalDispatchTable实现了提权，但是在内核中执行shellcode需要绕过很多保护措施的，因此这里我们引入一种新的方法实现对内核的利用&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/categories/research/HEVD/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/tags/HEVD/"/>
    
  </entry>
  
  <entry>
    <title>HEVD ArbitraryOverwrite [win7sp1]</title>
    <link href="https://blog.ycdxsb.cn/bbe71603.html"/>
    <id>https://blog.ycdxsb.cn/bbe71603.html</id>
    <published>2021-03-30T14:14:00.000Z</published>
    <updated>2021-03-31T02:40:01.292Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;HEVD 系列第二类漏洞ArbitraryOverwrite&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/categories/research/HEVD/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/tags/HEVD/"/>
    
  </entry>
  
  <entry>
    <title>HEVD StackOverFlow [win7sp1]</title>
    <link href="https://blog.ycdxsb.cn/c09ea323.html"/>
    <id>https://blog.ycdxsb.cn/c09ea323.html</id>
    <published>2021-03-26T14:14:00.000Z</published>
    <updated>2021-03-31T02:40:55.508Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;HEVD 系列第一类漏洞StackOverFlow&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/categories/research/HEVD/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/tags/HEVD/"/>
    
  </entry>
  
  <entry>
    <title>HEVD3.0环境搭建</title>
    <link href="https://blog.ycdxsb.cn/46ae8303.html"/>
    <id>https://blog.ycdxsb.cn/46ae8303.html</id>
    <published>2021-03-25T14:14:00.000Z</published>
    <updated>2021-03-26T08:47:39.551Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;基本环境&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#基本环境&quot;&gt;¶&lt;/a&gt;基本环境&lt;/h2&gt;&lt;p&gt;漏洞驱动：&lt;a href=&quot;https://github.com/hacksysteam/HackSysExtremeVulnerableDriver/&quot;&gt;HEVD 3.0&lt;/a&gt;&lt;br&gt;宿主机(Host)：Win10&lt;br&gt;被调试机(Guest)：VMware16.0 Win7sp1&lt;br&gt;调试工具：Windows Preview&lt;br&gt;驱动加载工具：&lt;a href=&quot;https://www.osronline.com/article.cfm%5earticle=157.htm&quot;&gt;OSRLoader&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/categories/research/HEVD/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="HEVD" scheme="https://blog.ycdxsb.cn/tags/HEVD/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-0787 BITS任意文件移动漏洞</title>
    <link href="https://blog.ycdxsb.cn/57177eae.html"/>
    <id>https://blog.ycdxsb.cn/57177eae.html</id>
    <published>2021-03-24T14:14:00.000Z</published>
    <updated>2021-03-23T11:13:41.084Z</updated>
    
    
    <summary type="html">&lt;p&gt;漏洞组件：后台智能传输服务模块(BITS)&lt;/p&gt;&lt;p&gt;组件特点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;从HTTP Web服务器和SMB文件共享下载文件或将文件上传到HTTP Web服务器和SMB文件共享。&lt;/li&gt;&lt;li&gt;BITS将考虑传输成本以及网络使用情况，以便用户的前台工作影响尽可能小&lt;/li&gt;&lt;li&gt;即使重新启动后，BITS也可以处理网络中断，暂停并自动恢复传输。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/categories/research/windows/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>ATVHUNTER:Reliable Version Detection of Third-Party Libraries for Vulnerability Identification in Android Applications(ICSE 2021)</title>
    <link href="https://blog.ycdxsb.cn/953aec69.html"/>
    <id>https://blog.ycdxsb.cn/953aec69.html</id>
    <published>2021-03-23T15:57:00.000Z</published>
    <updated>2021-03-23T01:13:29.322Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#基本介绍&quot;&gt;¶&lt;/a&gt;基本介绍&lt;/h2&gt;&lt;p&gt;**研究背景：**安卓中第三方库(TPLs)使用十分常见，检测第三方库对于漏洞识别等都十分有用，但是由于TPL的分散性、直接或间接的依赖性以及应用中TPL信息的不透明性，现有工具不能很好的检测，更不用说检测具体某版本&lt;/p&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-0796 SMB Ghost 整数溢出漏洞</title>
    <link href="https://blog.ycdxsb.cn/6ba048bc.html"/>
    <id>https://blog.ycdxsb.cn/6ba048bc.html</id>
    <published>2021-03-23T14:14:00.000Z</published>
    <updated>2021-03-23T03:27:41.775Z</updated>
    
    
    <summary type="html">&lt;p&gt;漏洞位置：SMB服务驱动srv2.sys和srvnet.sys&lt;/p&gt;&lt;p&gt;漏洞原因：用户态可控数据传入内核，SMB在解压数据包的时候使用客户端传过来的长度进行解压时,并没有检查长度是否合法，导致整数溢出，最后通过构造payload，实现任意地址写，替换token权限提权&lt;/p&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/categories/research/windows/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Too Quiet in the Library-An Empirical Study of Security Updates in Android Apps Native Code(ICSE 2021)</title>
    <link href="https://blog.ycdxsb.cn/dc7da355.html"/>
    <id>https://blog.ycdxsb.cn/dc7da355.html</id>
    <published>2021-03-20T15:57:00.000Z</published>
    <updated>2021-03-23T01:15:14.151Z</updated>
    
    
    <summary type="html">&lt;p&gt;论文：&lt;a href=&quot;https://arxiv.org/pdf/1911.09716.pdf&quot;&gt;https://arxiv.org/pdf/1911.09716.pdf&lt;/a&gt;&lt;/p&gt;&lt;p&gt;代码：&lt;a href=&quot;https://github.com/salmanee/Librarian&quot;&gt;https://github.com/salmanee/Librarian&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>Windows Kernel Resources</title>
    <link href="https://blog.ycdxsb.cn/17ea52bf.html"/>
    <id>https://blog.ycdxsb.cn/17ea52bf.html</id>
    <published>2021-03-18T14:14:00.000Z</published>
    <updated>2021-03-23T00:51:16.278Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;windows kernel学习资料整理&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/categories/research/windows/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>windows权限管理机制</title>
    <link href="https://blog.ycdxsb.cn/e2c44604.html"/>
    <id>https://blog.ycdxsb.cn/e2c44604.html</id>
    <published>2021-02-22T14:14:00.000Z</published>
    <updated>2021-03-23T00:51:27.514Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;Windows 通过相互关联的&lt;strong&gt;身份验证&lt;/strong&gt;和&lt;strong&gt;授权机制&lt;/strong&gt;来控制&lt;strong&gt;系统资源&lt;/strong&gt;和&lt;strong&gt;网络资源&lt;/strong&gt;的使用。 对用户进行身份验证后，Windows 操作系统使用内置&lt;strong&gt;授权和访问控制技术&lt;/strong&gt;来实现保护资源的第二阶段：确定经过身份验证的用户是否具有访问资源的正确权限。&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/categories/research/windows/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>windows提权基础知识</title>
    <link href="https://blog.ycdxsb.cn/2acbaae3.html"/>
    <id>https://blog.ycdxsb.cn/2acbaae3.html</id>
    <published>2021-02-11T14:14:00.000Z</published>
    <updated>2021-03-23T00:51:42.754Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;调研调研，真的不想再调研了，淦！&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/categories/research/windows/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="windows" scheme="https://blog.ycdxsb.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>linux权限管理机制</title>
    <link href="https://blog.ycdxsb.cn/8f72536d.html"/>
    <id>https://blog.ycdxsb.cn/8f72536d.html</id>
    <published>2021-02-02T14:14:00.000Z</published>
    <updated>2021-03-23T00:51:02.718Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;包括文件管理机制和进程权限管理机制&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="linux_kernel" scheme="https://blog.ycdxsb.cn/categories/research/linux-kernel/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="linux kernel" scheme="https://blog.ycdxsb.cn/tags/linux-kernel/"/>
    
  </entry>
  
  <entry>
    <title>ROP Emporium (中)</title>
    <link href="https://blog.ycdxsb.cn/77e17aac.html"/>
    <id>https://blog.ycdxsb.cn/77e17aac.html</id>
    <published>2021-01-08T09:19:00.000Z</published>
    <updated>2021-03-23T00:11:21.038Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;ROP Emporium 第二部分&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/categories/CTF/"/>
    
    <category term="pwn" scheme="https://blog.ycdxsb.cn/categories/CTF/pwn/"/>
    
    <category term="stack_overflow" scheme="https://blog.ycdxsb.cn/categories/CTF/pwn/stack-overflow/"/>
    
    <category term="ROP_Emporium" scheme="https://blog.ycdxsb.cn/categories/CTF/pwn/stack-overflow/ROP-Emporium/"/>
    
    
    <category term="CTF" scheme="https://blog.ycdxsb.cn/tags/CTF/"/>
    
    <category term="pwn" scheme="https://blog.ycdxsb.cn/tags/pwn/"/>
    
    <category term="stack overflow" scheme="https://blog.ycdxsb.cn/tags/stack-overflow/"/>
    
    <category term="ROP Emporium" scheme="https://blog.ycdxsb.cn/tags/ROP-Emporium/"/>
    
  </entry>
  
  <entry>
    <title>linux切换内核版本</title>
    <link href="https://blog.ycdxsb.cn/a453e6a.html"/>
    <id>https://blog.ycdxsb.cn/a453e6a.html</id>
    <published>2020-12-20T14:14:00.000Z</published>
    <updated>2021-03-23T00:47:21.074Z</updated>
    
    
    <summary type="html">&lt;p&gt;内核文件包含：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;linux-image-版本号：内核映像文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux-headers-版本号：内核头文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux-image-extra-版本号：内核扩展文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="linux_kernel" scheme="https://blog.ycdxsb.cn/categories/research/linux-kernel/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="linux kernel" scheme="https://blog.ycdxsb.cn/tags/linux-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Similarity of Binaries Across Optimization Levels and Obfuscation(ESORICS 2020)</title>
    <link href="https://blog.ycdxsb.cn/930679b9.html"/>
    <id>https://blog.ycdxsb.cn/930679b9.html</id>
    <published>2020-12-10T14:14:00.000Z</published>
    <updated>2021-03-23T00:46:51.958Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;现有的二进制相似度检测工作并没有很好的解决编译优化和混淆带来的影响，所以作者提出了&lt;code&gt;IMOPT&lt;/code&gt;来重新优化代码，用于提高代码相似性检测的准确率。&lt;/p&gt;&lt;p&gt;该方法在测试集上和原本的Asm2vec相比，将精度提高了22.7%，并且可以缓解ollvm混淆带来的影响&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="papers" scheme="https://blog.ycdxsb.cn/categories/papers/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/categories/papers/security/"/>
    
    <category term="automatic_analyse" scheme="https://blog.ycdxsb.cn/categories/papers/security/automatic-analyse/"/>
    
    
    <category term="paper" scheme="https://blog.ycdxsb.cn/tags/paper/"/>
    
    <category term="security" scheme="https://blog.ycdxsb.cn/tags/security/"/>
    
    <category term="automatic analyse" scheme="https://blog.ycdxsb.cn/tags/automatic-analyse/"/>
    
  </entry>
  
  <entry>
    <title>CodeQL之CWE-401(4)</title>
    <link href="https://blog.ycdxsb.cn/fcace802.html"/>
    <id>https://blog.ycdxsb.cn/fcace802.html</id>
    <published>2020-11-30T14:14:00.000Z</published>
    <updated>2021-03-23T00:45:01.038Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;之前我们简要的将CWE-401分为了两类：第一类为(过程内)不存在一条路径，将已分配的内存进行了释放，而在写脚本时，我们并没有解决参数传递导致的误报&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/categories/research/codeql/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/tags/codeql/"/>
    
  </entry>
  
  <entry>
    <title>CodeQL之CWE-401(3)</title>
    <link href="https://blog.ycdxsb.cn/b3ed7ec5.html"/>
    <id>https://blog.ycdxsb.cn/b3ed7ec5.html</id>
    <published>2020-11-20T14:14:00.000Z</published>
    <updated>2021-03-23T00:44:46.574Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;在第一部分中，我们将&lt;code&gt;CWE-401&lt;/code&gt;简单分为两类，第一类是对于分配的内存，不存在路径对它进行了释放，第二类是有的路径释放了，而有的路径忘了释放，现在我们对第二类进行解决&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/categories/research/codeql/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/tags/codeql/"/>
    
  </entry>
  
  <entry>
    <title>CodeQL之CWE-401(2)</title>
    <link href="https://blog.ycdxsb.cn/aaf64f84.html"/>
    <id>https://blog.ycdxsb.cn/aaf64f84.html</id>
    <published>2020-11-10T14:14:00.000Z</published>
    <updated>2021-03-23T00:44:28.618Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;在写第二类&lt;code&gt;CWE-401&lt;/code&gt;的查询脚本前，我们需要补充一些东西、在能找到的&lt;code&gt;codeql&lt;/code&gt;文档里，大部分都只强推了它的&lt;code&gt;DataFlow&lt;/code&gt;模块，而在写第二类查询脚本时，需要用到它的可达性分析模块&lt;code&gt;import semmle.code.cpp.controlflow.StackVariableReachability&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/categories/research/codeql/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/tags/codeql/"/>
    
  </entry>
  
  <entry>
    <title>CodeQL之CWE-401(1)</title>
    <link href="https://blog.ycdxsb.cn/81db1c47.html"/>
    <id>https://blog.ycdxsb.cn/81db1c47.html</id>
    <published>2020-11-08T14:14:00.000Z</published>
    <updated>2021-03-23T00:43:54.686Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;The software does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/categories/research/codeql/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/tags/codeql/"/>
    
  </entry>
  
  <entry>
    <title>CodeQL之CWE-252</title>
    <link href="https://blog.ycdxsb.cn/3f2f6cef.html"/>
    <id>https://blog.ycdxsb.cn/3f2f6cef.html</id>
    <published>2020-11-06T14:14:00.000Z</published>
    <updated>2021-03-23T00:43:35.186Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;CWE-252: Unchecked Return Value&lt;/p&gt;&lt;p&gt;The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;顾名思义，&lt;code&gt;Unchecked Return Value&lt;/code&gt;，就是在实际代码中缺少了对返回值的检查，在实际代码中，对错误返回值的检查尤为重要，因为需要进入到相应的错误处理环节中去，否则会影响程序的正常运行。比如我们常见的对&lt;code&gt;malloc&lt;/code&gt;返回值的检查等等，和&lt;code&gt;CWE-252&lt;/code&gt;相关的还有&lt;code&gt;CWE-754&lt;/code&gt;、&lt;code&gt;CWE-273&lt;/code&gt;、&lt;code&gt;CWE-476&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/categories/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/categories/research/codeql/"/>
    
    
    <category term="research" scheme="https://blog.ycdxsb.cn/tags/research/"/>
    
    <category term="codeql" scheme="https://blog.ycdxsb.cn/tags/codeql/"/>
    
  </entry>
  
</feed>
